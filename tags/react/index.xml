<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Andy White</title>
    <link>https://andywhite.xyz/tags/react/</link>
    <description>Recent content in React on Andy White</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jan 2021 19:19:54 -0700</lastBuildDate><atom:link href="https://andywhite.xyz/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TypeScript &#43; fp-ts: ReaderTaskEither and React</title>
      <link>https://andywhite.xyz/posts/2021-01-28-rte-react/</link>
      <pubDate>Thu, 28 Jan 2021 19:19:54 -0700</pubDate>
      
      <guid>https://andywhite.xyz/posts/2021-01-28-rte-react/</guid>
      <description>ReaderTaskEither&amp;lt;R, E, A&amp;gt; and React    This article is intended to build up some intuitions about the ReaderTaskEither&amp;lt;R, E, A&amp;gt; type from fp-ts and then present some real-world usage guides for using it with React.
The code from this article is loosely based on some play-around/experimental code here: https://github.com/andywhite37/react-rte-experiment
Overview    The first thing to note about ReaderTaskEither&amp;lt;R, E, A&amp;gt; is that it provides a ton of built-in functionality for doing all the common operations you&amp;rsquo;d typically want from an &amp;ldquo;effect type.</description>
    </item>
    
    <item>
      <title>TypeScript &#43; fp-ts: ReaderTaskEither Foundations</title>
      <link>https://andywhite.xyz/posts/2021-01-27-rte-foundations/</link>
      <pubDate>Wed, 27 Jan 2021 18:43:19 -0700</pubDate>
      
      <guid>https://andywhite.xyz/posts/2021-01-27-rte-foundations/</guid>
      <description>ReaderTaskEither&amp;lt;R, E, A&amp;gt; Foundations    This post is meant to give some background information on the ReaderTaskEither&amp;lt;R, E, A&amp;gt; type from fp-ts.
What is a ReaderTaskEither?    To understand ReaderTaskEither&amp;lt;R, E, A&amp;gt; (aka RTE), it&amp;rsquo;s important to understand some of the lower-level fp-ts &amp;ldquo;effect types&amp;rdquo; upon which RTE is built. Note that in fp-ts, some of these types might be encoded slightly differently than below, but the concepts should be the same.</description>
    </item>
    
  </channel>
</rss>
